ssl-vs-tls:
    question: 
        big: |
            are SSL and TLS
            the same thing?
    answer: 
        big: yes!
        small: |
            In 1999, the SSL protocol was updated and renamed to TLS. People often still say "SSL" and "TLS" interchangeably.
            Basically nobody uses the old SSL protocol anymore. We all use TLS.

whats-tls-for:
    question: 
        big: |
            we use TLS (aka SSL) for 2 main reasons. What are they?
    answer: 
        small: |
            1. Encryption! It makes sure Bad Guys can't intercept your bank password

            2. Authentication! TLS makes sure that when you connect to google.com, it's actually Google and not someone else

https-vs-tls:
    question: 
        big: |
            does HTTPS use TLS?
    answer: 
        big: yes!
        small: |
            you can encrypt any TCP connection with TLS (like a database connection or email). "HTTPS" is what we call it when we encrypt a HTTP connection with TLS.

tls-wire:
    question: 
        big: |
            after you've established a
            TLS connection, what
            algorithm is used to
            encrypt the data?
        small: |
            a. ECDSA
            b. AES
            c. SHA
            d. RSA
    answer: 
        big: |
            b. a symmetric cipher
            like AES!
        small: |
            RSA and ECDSA are slow! So instead the client and server pick a secret (and faster to use) symmetric key and use that to encrypt everything.

every-cert-domain:
    question:
        big: |
            does every TLS server certificate have a hostname
            (like mail.google.com) on it?
    answer:
        big: yes!
        small: |
            the point of a certificate is to prove that a server is the "real" server for a hostname, so every certificate has a hostname on it.

multiple-domains:
    question: 
        big: |
            can you use the same
            certificate for more
            than one hostname?
    answer: 
        big: yes!
        small: |
            there are 2 ways to do this:
            
            1. use a "wildcard" certificate, like "*.google.com"
            2. list multiple hostnames that the certificate is valid for when you create it, like apple.com and apple.com.cn

how-get-certificate:
    question:
        big: |
            what do you need to do to
            get a certificate signed?
        small: |
            a. pay the certificate authority
            b. prove that you own the website
            c. have the right private key
    answer:
        big: b. prove that you own the website
        small:
            the point of a certificate is to prove that you're the legitimate owner of the website

how-browser-check:
    question:
        big: |
            how does a browser check that your certificate is signed by someone it trust?
        small: |
            a. it has a hardcoded list
            b. it asks a server
            c. it uses certificate transparency
    answer:
        big: a. it has a hardcoded list
        small:
            your browser (or sometimes your OS) has a hardcoded list of trusted certificate authorities.

can-tls-decrypt-2:
    question: 
        big: |
            if you use HTTPS to connect to a website, can your employer see what information you're sending?
    answer: 
        big: sometimes!
        small: |
            as long as your browser only trusts real certificate authorities, you're safe.
            But employers sometimes install a fake CA on your computer so they can intercept and read TLS traffic.

are-free-certificates-secure:
    question: 
        big: |
            are free certificates (like the ones from Let's Encrypt) just as secure as the ones you pay for?
    answer: 
        big: yes!
        small: |
            all certificates use the exact same cryptography. You can pay a certificate authority extra for an EV ("extended validation") certificate, but that won't give you better crypto.

do-tls-certificates-expire:
    question: 
        big: |
            once you get a
            TLS certificate, can
            you use it forever?
    answer: 
        big: no!
        small: |
            every certificate has an expiration date, usually 3 months to a year after it was issued.
            One reason this is good: if someone steals your certificate's private key, they can only use it for a limited amount of time!

do-i-need-a-ca:
    question: 
        big: |
            do you need a certificate authority (like Let's Encrypt or Symantec) to create a TLS certificate?
    answer: 
        big: no!
        small: |
            you can make a "self-signed" TLS certificate on your computer in 2 minutes. But because that certificate isn't signed by a trusted certificate authority, browsers won't accept it.


is-ssl-dangerous:
    question: 
        big: |
            is it dangerous for your webserver to support old versions of TLS
            (like TLS 1.0 and 1.1?)
    answer: 
        big: it can be!
        small: |
            it leaves you vulnerable to downgrade attacks (like POODLE &amp; others).

certificate-secret:
    question: 
        big: |
            are TLS certificates secret?
    answer: 
        big: no!
        small: |
            a TLS certificate contains:
            - a public key
            - the hostname(s) it's valid for
            - an expiration date
            - signature(s) from a CA

            the private key for the cert is SUPER SECRET though!
